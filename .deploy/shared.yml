version: '3.7'
services:

  backend:
    env_file:
      - env-postgres.env
      - env-backend.env
    environment:
      - SERVER_NAME=${DOMAIN}
      - SERVER_HOST=${PROTOCOL}://${DOMAIN}
    depends_on:
      - db
      - rabbitmq
      - redis
    volumes:
      - app-data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=PathPrefix(`/api`, `/ws`, `/docs`, `/redoc`)"
      - "traefik.http.routers.backend.entrypoints=web"
    networks:
      default:
        aliases:
          - ${DOMAIN}

  worker:
    env_file:
      - env-postgres.env
      - env-backend.env
    environment:
      - SERVER_HOST=${PROTOCOL}://${DOMAIN}
    depends_on:
      - db
      - rabbitmq
      - redis
    volumes:
      - app-data:/data

  frontend:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"
      - "traefik.http.routers.frontend.entrypoints=web"

  db:
    restart: always
    image: postgres:11.6-alpine
    env_file:
      - env-postgres.env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - app-db-data:/var/lib/postgresql/data
    ports:
      - 5432:5432

  pgadmin:
    restart: always
    image: dpage/pgadmin4:4.15
    depends_on:
      - db
    env_file:
      - env-pgadmin.env
    ports:
      - 5050:5050
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  rabbitmq:
    restart: always
    image: rabbitmq:3.8.2-alpine
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  redis:
    restart: always
    image: redis:5.0.7-alpine3.10
    env_file:
      - env-redis.env
    volumes:
      - redis_data:/data

  redisinsight:
    restart: always
    image: redislabs/redisinsight:1.1.0
    depends_on:
      - redis
    ports:
      - 8001:8001
    volumes:
      - redisinsight_data:/db

  portainer:
    restart: always
    image: portainer/portainer:1.23.0
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    ports:
      - 9000:9000

  proxy:
    restart: always
    image: traefik:2.1.1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - 80:80
      - 443:443
      - 8080:8080

volumes:
  app-data:
  app-db-data:
  portainer_data:
  redis_data:
  redisinsight_data:
  rabbitmq_data:
  pgadmin_data:
