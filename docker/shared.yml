version: '3.7'
services:
  backend:
    env_file:
      - env-postgres.env
      - env-backend.env
    environment:
      - SERVER_NAME=${DOMAIN}
      - SERVER_HOST=${PROTOCOL}://${DOMAIN}
    depends_on:
      - db
      - rabbitmq
      - redis
    volumes:
      - app-data:/data
    labels:
      - traefik.frontend.rule=PathPrefix:/api,/docs,/redoc
      - traefik.enable=true
      - traefik.port=80
      - traefik.tags=${TRAEFIK_TAG}
    networks:
      default:
        aliases:
          - ${DOMAIN}
    logging:
      driver: gelf
      options:
        gelf-address: udp://localhost:12201
        tag: backend

  worker:
    env_file:
      - env-postgres.env
      - env-backend.env
    environment:
      - SERVER_HOST=${PROTOCOL}://${DOMAIN}
    depends_on:
      - db
      - rabbitmq
      - redis
    volumes:
      - app-data:/data
    logging:
      driver: gelf
      options:
        gelf-address: udp://localhost:12201
        tag: worker

  frontend:
    labels:
      - traefik.frontend.rule=PathPrefix:/
      - traefik.enable=true
      - traefik.port=80
      - traefik.tags=${TRAEFIK_TAG}

  db:
    restart: always
    image: postgres:11.3-alpine
    env_file:
      - env-postgres.env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - app-db-data:/var/lib/postgresql/data
    ports:
      - 5432:5432

  rabbitmq:
    restart: always
    image: rabbitmq:3.7.15-alpine
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

  redis:
    restart: always
    image: redis:5.0.5-alpine3.9
    env_file:
      - env-redis.env
    volumes:
      - redis-data:/data

  pgadmin:
    restart: always
    image: dpage/pgadmin4
    depends_on:
      - db
    env_file:
      - env-pgadmin.env
    ports:
      - 5050:5050
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  portainer:
    restart: always
    image: portainer/portainer:1.21.0
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
    ports:
      - 9000:9000

  proxy:
    restart: always
    image: traefik:v1.7.12-alpine
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 80:80
      - 443:443
      - 8090:8080

  # MongoDB: https://hub.docker.com/_/mongo/
  mongo:
    image: mongo:3.6.13
    volumes:
      - mongo-data:/data/db

  # Elasticsearch: https://www.elastic.co/guide/en/elasticsearch/reference/6.6/docker.html
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.8.1
    env_file:
      - env-elasticsearch.env
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  # Graylog: https://hub.docker.com/r/graylog/graylog/
  graylog:
    image: graylog/graylog:3.0.2
    env_file:
      - env-graylog.env
    depends_on:
      - mongo
      - elasticsearch
    ports:
      # Graylog web interface and REST API
      - 9001:9000
      # Syslog TCP
      - 1514:1514
      # Syslog UDP
      - 1514:1514/udp
      # GELF TCP
      - 12201:12201
      # GELF UDP
      - 12201:12201/udp
    volumes:
      - graylog-data:/usr/share/graylog/data/journal

volumes:
  app-data:
  app-db-data:
  elasticsearch-data:
  graylog-data:
  mongo-data:
  portainer-data:
  redis-data:
  rabbitmq-data:
  pgadmin-data:
